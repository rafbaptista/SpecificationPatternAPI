// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpecificationPatternAPI.Infrastructure.Context;

#nullable disable

namespace SpecificationPatternAPI.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SpecificationPatternAPI.Domain.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Company");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Name = "Coca-Cola"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Name = "Pepsi"
                        });
                });

            modelBuilder.Entity("SpecificationPatternAPI.Domain.Entities.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("FinancialValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Sales", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            FinancialValue = 20000m,
                            UserId = 3
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            FinancialValue = 15000m,
                            UserId = 4
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            FinancialValue = 5000m,
                            UserId = 5
                        });
                });

            modelBuilder.Entity("SpecificationPatternAPI.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCompanyAdministrator")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            IsCompanyAdministrator = false,
                            Name = "Rafael"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CompanyId = 1,
                            IsCompanyAdministrator = true,
                            Name = "Bruno"
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            CompanyId = 1,
                            IsCompanyAdministrator = false,
                            Name = "Fernando"
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            CompanyId = 2,
                            IsCompanyAdministrator = false,
                            Name = "Daniel"
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            CompanyId = 1,
                            IsCompanyAdministrator = false,
                            Name = "Gabriel"
                        });
                });

            modelBuilder.Entity("SpecificationPatternAPI.Domain.Entities.Sale", b =>
                {
                    b.HasOne("SpecificationPatternAPI.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SpecificationPatternAPI.Domain.Entities.User", b =>
                {
                    b.HasOne("SpecificationPatternAPI.Domain.Entities.Company", "Company")
                        .WithMany("Users")
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("SpecificationPatternAPI.Domain.Entities.Company", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
